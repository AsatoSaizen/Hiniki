package ani.himitsu.settings.saving

import android.graphics.Color
import ani.dantotsu.connections.comments.AuthResponse
import ani.dantotsu.notifications.comment.CommentStore
import ani.himitsu.BuildConfig
import ani.himitsu.connections.mal.MAL
import ani.himitsu.media.cereal.AniProgress
import ani.himitsu.media.cereal.Media
import ani.himitsu.notifications.subscription.SubscriptionStore
import ani.himitsu.settings.saving.internal.Location
import ani.himitsu.settings.saving.internal.Pref

enum class PrefName(val data: Pref) {  // TODO: Split this into multiple files
    //General
    SharedUserID(Pref(Location.General, Boolean::class, false)),
    OfflineView(Pref(Location.General, Int::class, 0)),
    DownloadManager(Pref(Location.General, Int::class, 0)),
    NSFWExtension(Pref(Location.General, Boolean::class, true)),
    ContinueMedia(Pref(Location.General, Boolean::class, true)),
    SearchSources(Pref(Location.General, Boolean::class, false)),
    DescendingItems(Pref(Location.General, Boolean::class, false)),
    RecentlyListOnly(Pref(Location.General, Boolean::class, false)),
    SocialInMedia(Pref(Location.General, Boolean::class, true)),
    UseFoldable(Pref(Location.General, Boolean::class, true)),
    UseShortcuts(Pref(Location.General, Boolean::class, true)),
    SyncProgress(Pref(Location.General, Boolean::class, false)),
    SettingsPreferDub(Pref(Location.General, Boolean::class, false)),
    SettingsExceedCap(Pref(Location.General, Boolean::class, false)),
    TorrServerPort(Pref(Location.General, String::class, "8090")),
    SubscriptionCheckingNotifications(Pref(Location.General, Boolean::class, true)),
    CheckUpdate(Pref(Location.General, Boolean::class, true)),
    VerboseLogging(Pref(Location.General, Boolean::class, false)),
    DohProvider(Pref(Location.General, Int::class, 0)),
    DefaultUserAgent(
        Pref(
            Location.General,
            String::class,
            "Mozilla/5.0 (Linux; Android 13; Pixel 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Mobile Safari/537.36"
        )
    ),
    AnimeExtensionRepos(Pref(Location.General, Set::class, setOf<String>())),
    MangaExtensionRepos(Pref(Location.General, Set::class, setOf<String>())),
    NovelExtensionRepos(Pref(Location.General, Set::class, setOf<String>())),
    TorrServerEnabled(Pref(Location.General, Boolean::class, false)),
    AnimeSourcesOrder(Pref(Location.General, List::class, listOf<String>())),
    AnimeSearchHistory(Pref(Location.General, Set::class, setOf<String>())),
    MangaSourcesOrder(Pref(Location.General, List::class, listOf<String>())),
    MangaSearchHistory(Pref(Location.General, Set::class, setOf<String>())),
    NovelSourcesOrder(Pref(Location.General, List::class, listOf<String>())),
    ComicBookFormat(Pref(Location.General, Boolean::class, false)),
    CommentNotificationInterval(Pref(Location.General, Int::class, 0)),
    AnilistNotificationInterval(Pref(Location.General, Int::class, 3)),
    SubscriptionNotificationInterval(Pref(Location.General, Int::class, 2)),
    LastAnilistNotificationId(Pref(Location.General, Int::class, 0)),
    AnilistFilteredTypes(Pref(Location.General, Set::class, setOf<String>())),
    UseAlarmManager(Pref(Location.General, Boolean::class, false)),
    CommentsOptIn(Pref(Location.General, Boolean::class, false)),
    IncludeAnimeList(Pref(Location.General, Boolean::class, true)),
    IncludeMangaList(Pref(Location.General, Boolean::class, true)),
    AdultOnly(Pref(Location.General, Boolean::class, false)),
    DeleteOnImport(Pref(Location.General, Boolean::class, false)),

    //User Interface
    UseOLED(Pref(Location.UI, Boolean::class, false)),
    UseCustomTheme(Pref(Location.UI, Boolean::class, false)),
    CustomThemeInt(Pref(Location.UI, Int::class, Color.parseColor("#6200EE"))),
    UseSourceTheme(Pref(Location.UI, Boolean::class, false)),
    UseProfileTheme(Pref(Location.UI, Boolean::class, false)),
    UseMaterialYou(Pref(Location.UI, Boolean::class, false)),
    Theme(Pref(Location.UI, String::class, "PURPLE")),
    SkipExtensionIcons(Pref(Location.UI, Boolean::class, false)),
    DarkMode(Pref(Location.UI, Int::class, 0)),
    ShowYtButton(Pref(Location.UI, Boolean::class, true)),
    LocalTimeZone(Pref(Location.UI, Boolean::class, false)),
    AnimeDefaultView(Pref(Location.UI, Int::class, 0)),
    MangaDefaultView(Pref(Location.UI, Int::class, 0)),
    BlurBanners(Pref(Location.UI, Boolean::class, true)),
    BlurRadius(Pref(Location.UI, Float::class, 2f)),
    BlurSampling(Pref(Location.UI, Float::class, 2f)),
    ImmersiveMode(Pref(Location.UI, Boolean::class, false)),
    HomeMainHide(Pref(Location.UI, Boolean::class, true)),
    HideRandoRec(Pref(Location.UI, Boolean::class, false)),
    ShowForumButton(Pref(Location.UI, Boolean::class, true)),
    ShowAnibrainButton(Pref(Location.UI, Boolean::class, true)),
    TrendingCovers(Pref(Location.UI, Boolean::class, true)),
    SmallVille(Pref(Location.UI, Boolean::class, false)),
    LoisLane(Pref(Location.UI, Float::class, 2f)),
    PersistSearch(Pref(Location.UI, Boolean::class, false)),
    FloatingAvatar(Pref(Location.UI, Boolean::class, false)),
    DefaultStartUpTab(Pref(Location.UI, Int::class, 1)),
    HomeLayout(
        Pref(
            Location.UI,
            List::class,
            listOf(false, true, false, false, true, false, false, true, true)
        )
    ),
    LoadingAffinity(Pref(Location.UI, Int::class, 0)),
    BannerAnimations(Pref(Location.UI, Boolean::class, true)),
    YouTubeBanners(Pref(Location.UI, Boolean::class, true)),
    LayoutAnimations(Pref(Location.UI, Boolean::class, true)),
    TrendingScroller(Pref(Location.UI, Boolean::class, true)),
    AnimationSpeed(Pref(Location.UI, Float::class, 1f)),
    ListGrid(Pref(Location.UI, Boolean::class, true)),
    PopularMangaList(Pref(Location.UI, Boolean::class, true)),
    PopularAnimeList(Pref(Location.UI, Boolean::class, true)),
    AnimeListSortOrder(Pref(Location.UI, String::class, "score")),
    MangaListSortOrder(Pref(Location.UI, String::class, "score")),
    CommentSortOrder(Pref(Location.UI, String::class, "newest")),
    NotificationPage(Pref(Location.UI, Int::class, 0)),
    FollowerLayout(Pref(Location.UI, Int::class, 0)),

    // Player
    ExoPlayerSpeed(Pref(Location.Player, Float::class, 1.0f)),
    Resize(Pref(Location.Player, Int::class, 0)),
    Subtitles(Pref(Location.Player, Boolean::class, true)),
    SubDefaults(Pref(Location.Player, Boolean::class, false)),
    SubTranslate(Pref(Location.Player, Boolean::class, false)),
    SubLanguage(Pref(Location.Player, Int::class, 16)),
    PrimaryColor(Pref(Location.Player, Int::class, 4)),
    SecondaryColor(Pref(Location.Player, Int::class, 0)),
    SubOutline(Pref(Location.Player, Int::class, 0)),
    SubBackground(Pref(Location.Player, Int::class, 0)),
    SubWindow(Pref(Location.Player, Int::class, 0)),
    SubAlpha(Pref(Location.Player, Float::class, 1f)),
    Font(Pref(Location.Player, Int::class, 0)),
    Typeface(Pref(Location.Player, String::class, "")),
    FontSize(Pref(Location.Player, Int::class, 20)),
    BottomPaddingRatio(Pref(Location.Player, Float::class, 0f)),
    SubBottomPadding(Pref(Location.Player, Float::class, 0f)),
    Locale(Pref(Location.Player, Int::class, 2)),
    AutoHideTimeStamps(Pref(Location.Player, Boolean::class, true)),
    StampButtonTimeout(Pref(Location.Player, Int::class, 5)),
    ShowTimeStampButton(Pref(Location.Player, Boolean::class, true)),
    AutoSkipOPED(Pref(Location.Player, Boolean::class, false)),
    AutoSkipRecap(Pref(Location.Player, Boolean::class, false)),
    AutoPlay(Pref(Location.Player, Boolean::class, true)),
    AutoSkipFiller(Pref(Location.Player, Boolean::class, false)),
    AskIndividualPlayer(Pref(Location.Player, Boolean::class, true)),
    ChapterZeroPlayer(Pref(Location.Player, Boolean::class, true)),
    UpdateForHPlayer(Pref(Location.Player, Boolean::class, false)),
    WatchPercentage(Pref(Location.Player, Float::class, 0.8f)),
    AlwaysContinue(Pref(Location.Player, Boolean::class, true)),
    FocusPause(Pref(Location.Player, Boolean::class, true)),
    Gestures(Pref(Location.Player, Boolean::class, true)),
    DoubleTap(Pref(Location.Player, Boolean::class, true)),
    FastForward(Pref(Location.Player, Boolean::class, true)),
    FastModifier(Pref(Location.Player, Float::class, 0.5f)),
    LockForward(Pref(Location.Player, Boolean::class, false)),
    ScrubPreview(Pref(Location.Player, Boolean::class, false)),
    ScrubAccelerated(Pref(Location.Player, Boolean::class, false)),
    SeekTime(Pref(Location.Player, Int::class, 10)),
    SkipTime(Pref(Location.Player, Int::class, 85)),
    Cast(Pref(Location.Player, Boolean::class, true)),
    UseInternalCast(Pref(Location.Player, Boolean::class, false)),
    EpisodeSources(Pref(Location.Player, Boolean::class, true)),
    AnifyTimeout(Pref(Location.General, Float::class, 0.75f)),
    KitsuTimeout(Pref(Location.General, Float::class, 1f)),
    Pip(Pref(Location.Player, Boolean::class, true)),
    RotationPlayer(Pref(Location.Player, Boolean::class, true)),
    MinBufferTime(Pref(Location.Player, Float::class, 30f)),
    MaxBufferTime(Pref(Location.Player, Float::class, 60f)),

    //Reader
    ShowSource(Pref(Location.Reader, Boolean::class, true)),
    ShowSystemBars(Pref(Location.Reader, Boolean::class, false)),
    AutoDetectWebtoon(Pref(Location.Reader, Boolean::class, true)),
    AskIndividualReader(Pref(Location.Reader, Boolean::class, true)),
    ChapterZeroReader(Pref(Location.Reader, Boolean::class, false)),
    UpdateForHReader(Pref(Location.Reader, Boolean::class, false)),
    Direction(Pref(Location.Reader, Int::class, 0)),
    LayoutReader(Pref(Location.Reader, Int::class, 2)),
    DualPageModeReader(Pref(Location.Reader, Int::class, 1)),
    OverScrollMode(Pref(Location.Reader, Boolean::class, true)),
    TrueColors(Pref(Location.Reader, Boolean::class, false)),
    HardColors(Pref(Location.Reader, Boolean::class, false)),
    Rotation(Pref(Location.Reader, Boolean::class, true)),
    Padding(Pref(Location.Reader, Boolean::class, true)),
    PageTurn(Pref(Location.Reader, Boolean::class, true)),
    HideScrollBar(Pref(Location.Reader, Boolean::class, false)),
    HidePageNumbers(Pref(Location.Reader, Boolean::class, false)),
    HorizontalScrollBar(Pref(Location.Reader, Boolean::class, true)),
    KeepScreenOn(Pref(Location.Reader, Boolean::class, false)),
    VolumeButtonsReader(Pref(Location.Reader, Boolean::class, false)),
    WrapImages(Pref(Location.Reader, Boolean::class, false)),
    LongClickImage(Pref(Location.Reader, Boolean::class, true)),
    CropBorders(Pref(Location.Reader, Boolean::class, false)),
    CropBorderThreshold(Pref(Location.Reader, Int::class, 10)),
    PhotoNegative(Pref(Location.Reader, Boolean::class, false)),
    AutoNegative(Pref(Location.Reader, Boolean::class, false)),

    //Novel Reader
    CurrentThemeName(Pref(Location.NovelReader, String::class, "Default")),
    LayoutNovel(Pref(Location.NovelReader, Int::class, 0)),
    DualPageModeNovel(Pref(Location.NovelReader, Int::class, 1)),
    LineHeight(Pref(Location.NovelReader, Float::class, 1.4f)),
    Margin(Pref(Location.NovelReader, Float::class, 0.06f)),
    Justify(Pref(Location.NovelReader, Boolean::class, true)),
    Hyphenation(Pref(Location.NovelReader, Boolean::class, true)),
    UseDarkThemeNovel(Pref(Location.NovelReader, Boolean::class, false)),
    UseOledThemeNovel(Pref(Location.NovelReader, Boolean::class, false)),
    Invert(Pref(Location.NovelReader, Boolean::class, false)),
    MaxInlineSize(Pref(Location.NovelReader, Int::class, 720)),
    MaxBlockSize(Pref(Location.NovelReader, Int::class, 1440)),
    HorizontalScrollBarNovel(Pref(Location.NovelReader, Boolean::class, true)),
    KeepScreenOnNovel(Pref(Location.NovelReader, Boolean::class, false)),
    VolumeButtonsNovel(Pref(Location.NovelReader, Boolean::class, false)),

    //Irrelevant
    SecureLock(Pref(Location.Irrelevant, Boolean::class, false)),
    Incognito(Pref(Location.Irrelevant, Boolean::class, false)),
    OfflineMode(Pref(Location.Irrelevant, Boolean::class, false)),
    PendingItems(Pref(Location.Irrelevant, List::class, listOf<AniProgress>())),
    DiscordStatus(Pref(Location.Irrelevant, String::class, "online")),
    ShowAniListIcon(Pref(Location.Irrelevant, Boolean::class, false)),
    LoopAnimatedRPC(Pref(Location.Irrelevant, Boolean::class, true)),
    DownloadsKeys(Pref(Location.Irrelevant, String::class, "")),
    NovelLastExtCheck(Pref(Location.Irrelevant, Long::class, 0L)),
    AllowOpeningLinks(Pref(Location.Irrelevant, Boolean::class, false)),
    SearchStyle(Pref(Location.Irrelevant, Int::class, 0)),
    HasUpdatedPrefs(Pref(Location.Irrelevant, Boolean::class, false)),
    LangSort(Pref(Location.Irrelevant, String::class, "all")),
    NotificationFilters(Pref(Location.Irrelevant, Set::class, setOf<String>())),
    GenresList(Pref(Location.Irrelevant, Set::class, setOf<String>())),
    TagsListIsAdult(Pref(Location.Irrelevant, Set::class, setOf<String>())),
    TagsListNonAdult(Pref(Location.Irrelevant, Set::class, setOf<String>())),
    MakeDefault(Pref(Location.Irrelevant, Boolean::class, true)),
    FirstComment(Pref(Location.Irrelevant, Boolean::class, true)),
    CommentAuthResponse(Pref(Location.Irrelevant, AuthResponse::class, "")),
    CommentTokenExpiry(Pref(Location.Irrelevant, Long::class, 0L)),
    Lightspeed(Pref(Location.Irrelevant, Boolean::class, false)),
    ExoAnalytics(Pref(Location.Irrelevant, Boolean::class, true)),
    ClientMode(Pref(Location.Irrelevant, Boolean::class, false)),
    OfflineAni(Pref(Location.Irrelevant, Boolean::class, true)),
    OfflineDbs(Pref(Location.Irrelevant, Boolean::class, true)),
    OfflineExt(Pref(Location.Irrelevant, Boolean::class, true)),
    OfflineRes(Pref(Location.Irrelevant, Boolean::class, true)),
    LogToFile(Pref(Location.Irrelevant, Boolean::class, false)),
    Crashlytics(Pref(Location.Irrelevant, Boolean::class, true)),
    RecentGlobalNotification(Pref(Location.Irrelevant, Int::class, 0)),
    CommentNotificationStore(Pref(Location.Irrelevant, List::class, listOf<CommentStore>())),
    SubscriptionNotificationStore(Pref(Location.Irrelevant, List::class, listOf<SubscriptionStore>())),
    UnreadCommentNotifications(Pref(Location.Irrelevant, Int::class, 0)),
    DownloadsDir(Pref(Location.Irrelevant, String::class, "")),
    RefreshStatus(Pref(Location.Irrelevant, Boolean::class, false)),
    ExtensionNotice(Pref(Location.Irrelevant, Boolean::class, false)),
    OfflineCache(Pref(Location.Irrelevant, List::class, listOf<Int>())),
    CachedAnime(Pref(Location.Irrelevant, List::class, listOf<Media>())),
    CachedManga(Pref(Location.Irrelevant, List::class, listOf<Media>())),
    LastBuildHash(Pref(Location.Irrelevant, String::class, BuildConfig.COMMIT)),

    //Protected
    DiscordToken(Pref(Location.Protected, String::class, "")),
    DiscordId(Pref(Location.Protected, String::class, "")),
    DiscordUserName(Pref(Location.Protected, String::class, "")),
    DiscordAvatar(Pref(Location.Protected, String::class, "")),
    AnilistToken(Pref(Location.Protected, String::class, "")),
    AnilistUserName(Pref(Location.Protected, String::class, "")),
    AnilistUserId(Pref(Location.Protected, String::class, "")),
    MALCodeChallenge(Pref(Location.Protected, String::class, "")),
    MALToken(Pref(Location.Protected, MAL.ResponseToken::class, "")),
}
